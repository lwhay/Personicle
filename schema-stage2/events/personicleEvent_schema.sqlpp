USE Personicle;

DROP DATASET PersonicleEvent IF EXISTS;
DROP TYPE PersonicleEventType IF EXISTS;

CREATE TYPE PersonicleEventType AS OPEN {
  eventId: UUID,        --primary key uuid for event
  userId: UUID,         --foreign key to user that participated in this event
  userName: string?,    --secondary key of user name
  beginAt: datetime,    --start of event
  endAt: datetime,      --end of event using `` because of a potential AsterixDB bug
  subEvents: [UUID]?,   --sub events of event
  location: point?,     --location of event
  geocode: string?,     --geometry code where the event took place.
  information: [UUID]?, --attributes of event, which so far includes user attributes only and can be extended to KG/Alg.
  name: string,
  level: bigint?,       --Jordan's paper referred to different levels of daily activities.
  causalities: [UUID]?  --foreign keys to ids of causalities which were used to translate from observations to this event
};

CREATE DATASET PersonicleEvent(PersonicleEventType) PRIMARY KEY eventId AUTOGENERATED;
CREATE INDEX PersonicleEventUserIdIdx on PersonicleEvent(userId) TYPE btree;
CREATE INDEX PersonicleEventActivityIdx on PersonicleEvent(information) TYPE btree;
CREATE INDEX PersonicleEventGeoCodeIdx on PersonicleEvent(geocode) TYPE btree;